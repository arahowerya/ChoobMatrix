

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jul 10 21:43:15 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F722A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	swtext1,local,class=CONST,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 1.45
    18                           ; Generated 16/11/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F722A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0096                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009F                     	;# 
   109  0108                     	;# 
   110  0109                     	;# 
   111  010C                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0185                     	;# 
   118  0186                     	;# 
   119  018C                     	;# 
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0089                     	;# 
   159  008C                     	;# 
   160  008D                     	;# 
   161  008E                     	;# 
   162  008F                     	;# 
   163  0090                     	;# 
   164  0091                     	;# 
   165  0092                     	;# 
   166  0093                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0095                     	;# 
   170  0095                     	;# 
   171  0096                     	;# 
   172  0096                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009F                     	;# 
   178  0108                     	;# 
   179  0109                     	;# 
   180  010C                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010D                     	;# 
   184  010E                     	;# 
   185  010F                     	;# 
   186  0185                     	;# 
   187  0186                     	;# 
   188  018C                     	;# 
   189                           
   190                           	psect	stringtext
   191  0600                     __pstringtext:	
   192  0600                     stringtab:	
   193  0600                     __stringtab:	
   194                           
   195                           ;	String table - string pointers are 2 bytes each
   196  0600  1BFF               	btfsc	btemp+1,7
   197  0601  2E0A               	ljmp	stringcode
   198  0602  1383               	bcf	3,7
   199  0603  187F               	btfsc	btemp+1,0
   200  0604  1783               	bsf	3,7
   201  0605  0800               	movf	0,w
   202  0606  0A84               	incf	4,f
   203  0607  1903               	skipnz
   204  0608  0AFF               	incf	btemp+1,f
   205  0609  0008               	return
   206  060A                     stringcode:	
   207  060A  087F               	movf	btemp+1,w
   208  060B  397F               	andlw	127
   209  060C  008A               	movwf	10
   210  060D  0804               	movf	4,w
   211  060E  0A84               	incf	4,f
   212  060F  1903               	skipnz
   213  0610  0AFF               	incf	btemp+1,f
   214  0611  0082               	movwf	2
   215  0612                     __stringbase:	
   216  0612                     __end_of__stringtab:	
   217  0612                     _ASCII7SEG:	
   218  0612  3400               	retlw	0
   219  0613  3400               	retlw	0
   220  0614  3400               	retlw	0
   221  0615  3400               	retlw	0
   222  0616  3400               	retlw	0
   223  0617  3400               	retlw	0
   224  0618  3400               	retlw	0
   225  0619  3400               	retlw	0
   226  061A  3400               	retlw	0
   227  061B  3400               	retlw	0
   228  061C  3400               	retlw	0
   229  061D  3400               	retlw	0
   230  061E  3400               	retlw	0
   231  061F  3400               	retlw	0
   232  0620  3400               	retlw	0
   233  0621  3400               	retlw	0
   234  0622  3400               	retlw	0
   235  0623  3400               	retlw	0
   236  0624  3400               	retlw	0
   237  0625  3400               	retlw	0
   238  0626  3400               	retlw	0
   239  0627  3400               	retlw	0
   240  0628  3400               	retlw	0
   241  0629  3400               	retlw	0
   242  062A  3400               	retlw	0
   243  062B  3400               	retlw	0
   244  062C  3400               	retlw	0
   245  062D  3400               	retlw	0
   246  062E  3400               	retlw	0
   247  062F  3400               	retlw	0
   248  0630  3400               	retlw	0
   249  0631  3400               	retlw	0
   250  0632  3400               	retlw	0
   251  0633  3400               	retlw	0
   252  0634  3400               	retlw	0
   253  0635  3400               	retlw	0
   254  0636  3400               	retlw	0
   255  0637  3400               	retlw	0
   256  0638  3400               	retlw	0
   257  0639  3400               	retlw	0
   258  063A  3400               	retlw	0
   259  063B  3400               	retlw	0
   260  063C  3400               	retlw	0
   261  063D  3400               	retlw	0
   262  063E  3400               	retlw	0
   263  063F  3400               	retlw	0
   264  0640  3400               	retlw	0
   265  0641  3400               	retlw	0
   266  0642  34FA               	retlw	250
   267  0643  3460               	retlw	96
   268  0644  34D7               	retlw	215
   269  0645  34F2               	retlw	242
   270  0646  3466               	retlw	102
   271  0647  34B6               	retlw	182
   272  0648  34BE               	retlw	190
   273  0649  34E0               	retlw	224
   274  064A  34FE               	retlw	254
   275  064B  34BA               	retlw	186
   276  064C  3400               	retlw	0
   277  064D  3400               	retlw	0
   278  064E  3400               	retlw	0
   279  064F  3400               	retlw	0
   280  0650  3400               	retlw	0
   281  0651  3400               	retlw	0
   282  0652  3400               	retlw	0
   283  0653  34EE               	retlw	238
   284  0654  343E               	retlw	62
   285  0655  341A               	retlw	26
   286  0656  347A               	retlw	122
   287  0657  349E               	retlw	158
   288  0658  348E               	retlw	142
   289  0659  3400               	retlw	0
   290  065A  3400               	retlw	0
   291  065B  3400               	retlw	0
   292  065C  3400               	retlw	0
   293  065D  3400               	retlw	0
   294  065E  3400               	retlw	0
   295  065F  3400               	retlw	0
   296  0660  3400               	retlw	0
   297  0661  3400               	retlw	0
   298  0662  3400               	retlw	0
   299  0663  3400               	retlw	0
   300  0664  3400               	retlw	0
   301  0665  3400               	retlw	0
   302  0666  3400               	retlw	0
   303  0667  3400               	retlw	0
   304  0668  3400               	retlw	0
   305  0669  3400               	retlw	0
   306  066A  3400               	retlw	0
   307  066B  3400               	retlw	0
   308  066C  3400               	retlw	0
   309  066D  3400               	retlw	0
   310  066E  3400               	retlw	0
   311  066F  3400               	retlw	0
   312  0670  3400               	retlw	0
   313  0671  3400               	retlw	0
   314  0672  3400               	retlw	0
   315  0673  3400               	retlw	0
   316  0674  3400               	retlw	0
   317  0675  3400               	retlw	0
   318  0676  3400               	retlw	0
   319  0677  3400               	retlw	0
   320  0678  3400               	retlw	0
   321  0679  3400               	retlw	0
   322  067A  3400               	retlw	0
   323  067B  3400               	retlw	0
   324  067C  3400               	retlw	0
   325  067D  3400               	retlw	0
   326  067E  3400               	retlw	0
   327  067F  3400               	retlw	0
   328  0680  3400               	retlw	0
   329  0681  3400               	retlw	0
   330  0682  3400               	retlw	0
   331  0683  3400               	retlw	0
   332  0684  3400               	retlw	0
   333  0685  3400               	retlw	0
   334  0686  3400               	retlw	0
   335  0687  3400               	retlw	0
   336  0688  3400               	retlw	0
   337  0689  3400               	retlw	0
   338  068A  3400               	retlw	0
   339  068B  3400               	retlw	0
   340  068C  3400               	retlw	0
   341  068D  3400               	retlw	0
   342  068E  3400               	retlw	0
   343  068F  3400               	retlw	0
   344  0690  3400               	retlw	0
   345  0691  3400               	retlw	0
   346  0692  3400               	retlw	0
   347  0693  3400               	retlw	0
   348  0694  3400               	retlw	0
   349  0695  3400               	retlw	0
   350  0696  3400               	retlw	0
   351  0697  3400               	retlw	0
   352  0698  3400               	retlw	0
   353  0699  3400               	retlw	0
   354  069A  3400               	retlw	0
   355  069B  3400               	retlw	0
   356  069C  3400               	retlw	0
   357  069D  3400               	retlw	0
   358  069E  3400               	retlw	0
   359  069F  3400               	retlw	0
   360  06A0  3400               	retlw	0
   361  06A1  3400               	retlw	0
   362  06A2  3400               	retlw	0
   363  06A3  3400               	retlw	0
   364  06A4  3400               	retlw	0
   365  06A5  3400               	retlw	0
   366  06A6  3400               	retlw	0
   367  06A7  3400               	retlw	0
   368  06A8  3400               	retlw	0
   369  06A9  3400               	retlw	0
   370  06AA  3400               	retlw	0
   371  06AB  3400               	retlw	0
   372  06AC  3400               	retlw	0
   373  06AD  3400               	retlw	0
   374  06AE  3400               	retlw	0
   375  06AF  3400               	retlw	0
   376  06B0  3400               	retlw	0
   377  06B1  3400               	retlw	0
   378  06B2  3400               	retlw	0
   379  06B3  3400               	retlw	0
   380  06B4  3400               	retlw	0
   381  06B5  3400               	retlw	0
   382  06B6  3400               	retlw	0
   383  06B7  3400               	retlw	0
   384  06B8  3400               	retlw	0
   385  06B9  3400               	retlw	0
   386  06BA  3400               	retlw	0
   387  06BB  3400               	retlw	0
   388  06BC  3400               	retlw	0
   389  06BD  3400               	retlw	0
   390  06BE  3400               	retlw	0
   391  06BF  3400               	retlw	0
   392  06C0  3400               	retlw	0
   393  06C1  3400               	retlw	0
   394  06C2  3400               	retlw	0
   395  06C3  3400               	retlw	0
   396  06C4  3400               	retlw	0
   397  06C5  3400               	retlw	0
   398  06C6  3400               	retlw	0
   399  06C7  3400               	retlw	0
   400  06C8  3400               	retlw	0
   401  06C9  3400               	retlw	0
   402  06CA  3400               	retlw	0
   403  06CB  3400               	retlw	0
   404  06CC  3400               	retlw	0
   405  06CD  3400               	retlw	0
   406  06CE  3400               	retlw	0
   407  06CF  3400               	retlw	0
   408  06D0  3400               	retlw	0
   409  06D1  3400               	retlw	0
   410  06D2  3400               	retlw	0
   411  06D3  3400               	retlw	0
   412  06D4  3400               	retlw	0
   413  06D5  3400               	retlw	0
   414  06D6  3400               	retlw	0
   415  06D7  3400               	retlw	0
   416  06D8  3400               	retlw	0
   417  06D9  3400               	retlw	0
   418  06DA  3400               	retlw	0
   419  06DB  3400               	retlw	0
   420  06DC  3400               	retlw	0
   421  06DD  3400               	retlw	0
   422  06DE  3400               	retlw	0
   423  06DF  3400               	retlw	0
   424  06E0  3400               	retlw	0
   425  06E1  3400               	retlw	0
   426  06E2  3400               	retlw	0
   427  06E3  3400               	retlw	0
   428  06E4  3400               	retlw	0
   429  06E5  3400               	retlw	0
   430  06E6  3400               	retlw	0
   431  06E7  3400               	retlw	0
   432  06E8  3400               	retlw	0
   433  06E9  3400               	retlw	0
   434  06EA  3400               	retlw	0
   435  06EB  3400               	retlw	0
   436  06EC  3400               	retlw	0
   437  06ED  3400               	retlw	0
   438  06EE  3400               	retlw	0
   439  06EF  3400               	retlw	0
   440  06F0  3400               	retlw	0
   441  06F1  3400               	retlw	0
   442  06F2  3400               	retlw	0
   443  06F3  3400               	retlw	0
   444  06F4  3400               	retlw	0
   445  06F5  3400               	retlw	0
   446  06F6  3400               	retlw	0
   447  06F7  3400               	retlw	0
   448  06F8  3400               	retlw	0
   449  06F9  3400               	retlw	0
   450  06FA  3400               	retlw	0
   451  06FB  3400               	retlw	0
   452  06FC  3400               	retlw	0
   453  06FD  3400               	retlw	0
   454  06FE  3400               	retlw	0
   455  06FF  3400               	retlw	0
   456  0700  3400               	retlw	0
   457  0701  3400               	retlw	0
   458  0702  3400               	retlw	0
   459  0703  3400               	retlw	0
   460  0704  3400               	retlw	0
   461  0705  3400               	retlw	0
   462  0706  3400               	retlw	0
   463  0707  3400               	retlw	0
   464  0708  3400               	retlw	0
   465  0709  3400               	retlw	0
   466  070A  3400               	retlw	0
   467  070B  3400               	retlw	0
   468  070C  3400               	retlw	0
   469  070D  3400               	retlw	0
   470  070E  3400               	retlw	0
   471  070F  3400               	retlw	0
   472  0710  3400               	retlw	0
   473  0711  3400               	retlw	0
   474  0712                     __end_of_ASCII7SEG:	
   475  0007                     _PORTCbits	set	7
   476  0006                     _PORTBbits	set	6
   477  0005                     _PORTAbits	set	5
   478  0098                     _TXSTAbits	set	152
   479  0087                     _TRISCbits	set	135
   480  0086                     _TRISBbits	set	134
   481  0085                     _TRISAbits	set	133
   482                           
   483                           	psect	cinit
   484  07F9                     start_initialization:	
   485                           ; #config settings
   486                           
   487  07F9                     __initialization:	
   488                           
   489                           ; Clear objects allocated to BANK0
   490  07F9  1383               	bcf	3,7	;select IRP bank0
   491  07FA  3020               	movlw	low __pbssBANK0
   492  07FB  0084               	movwf	4
   493  07FC  3036               	movlw	low (__pbssBANK0+22)
   494  07FD  27CB               	fcall	clear_ram0
   495  07FE                     end_of_initialization:	
   496                           ;End of C runtime variable initialization code
   497                           
   498  07FE                     __end_of__initialization:	
   499  07FE  0183               	clrf	3
   500  07FF  2FD3               	ljmp	_main	;jump to C main() function
   501                           
   502                           	psect	bssBANK0
   503  0020                     __pbssBANK0:	
   504  0020                     _gD:	
   505  0020                     	ds	22
   506                           
   507                           	psect	clrtext
   508  07CB                     clear_ram0:	
   509                           ;	Called with FSR containing the base address, and
   510                           ;	W with the last address+1
   511                           
   512  07CB  0064               	clrwdt	;clear the watchdog before getting into this loop
   513  07CC                     clrloop0:	
   514  07CC  0180               	clrf	0	;clear RAM location pointed to by FSR
   515  07CD  0A84               	incf	4,f	;increment pointer
   516  07CE  0604               	xorwf	4,w	;XOR with final address
   517  07CF  1903               	btfsc	3,2	;have we reached the end yet?
   518  07D0  3400               	retlw	0	;all done for this memory range, return
   519  07D1  0604               	xorwf	4,w	;XOR again to restore value
   520  07D2  2FCC               	goto	clrloop0	;do the next byte
   521                           
   522                           	psect	cstackCOMMON
   523  0070                     __pcstackCOMMON:	
   524  0070                     ?_processDisplay:	
   525  0070                     ?_gpio_init:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ??_gpio_init:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_enableDigit:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ??_enableDigit:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_muxDigit:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     enableDigit@pos:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     muxDigit@d2:	
   544                           ; 1 bytes @ 0x0
   545                           
   546                           
   547                           ; 1 bytes @ 0x0
   548  0070                     	ds	1
   549  0071                     ??_muxDigit:	
   550  0071                     muxDigit@d1:	
   551                           ; 1 bytes @ 0x1
   552                           
   553                           
   554                           ; 1 bytes @ 0x1
   555  0071                     	ds	1
   556  0072                     ??_processDisplay:	
   557                           
   558                           ; 1 bytes @ 0x2
   559  0072                     	ds	1
   560  0073                     ?_main:	
   561  0073                     main@argc:	
   562                           ; 2 bytes @ 0x3
   563                           
   564                           
   565                           ; 2 bytes @ 0x3
   566  0073                     	ds	2
   567  0075                     main@argv:	
   568                           
   569                           ; 2 bytes @ 0x5
   570  0075                     	ds	2
   571  0077                     ??_main:	
   572                           
   573                           	psect	maintext
   574  07D3                     __pmaintext:	
   575                           ; 1 bytes @ 0x7
   576 ;;
   577 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   578 ;;
   579 ;; *************** function _main *****************
   580 ;; Defined at:
   581 ;;		line 55 in file "main.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;  argc            2    3[COMMON] int 
   584 ;;  argv            2    5[COMMON] PTR PTR unsigned char 
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  2    3[COMMON] int 
   589 ;; Registers used:
   590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : B00/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMMON   BANK0   BANK1
   596 ;;      Params:         4       0       0
   597 ;;      Locals:         0       0       0
   598 ;;      Temps:          0       0       0
   599 ;;      Totals:         4       0       0
   600 ;;Total ram usage:        4 bytes
   601 ;; Hardware stack levels required when called:    2
   602 ;; This function calls:
   603 ;;		_gpio_init
   604 ;;		_processDisplay
   605 ;; This function is called by:
   606 ;;		Startup code after reset
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           
   611                           ;psect for function _main
   612  07D3                     _main:	
   613                           
   614                           ;main.c: 57: TXSTAbits.TXEN = 1;
   615                           
   616                           ;incstack = 0
   617                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   618  07D3  1683               	bsf	3,5	;RP0=1, select bank1
   619  07D4  1303               	bcf	3,6	;RP1=0, select bank1
   620  07D5  1698               	bsf	24,5	;volatile
   621                           
   622                           ;main.c: 59: gpio_init();
   623  07D6  27B0               	fcall	_gpio_init
   624  07D7                     l680:	
   625                           ;main.c: 60: while(1)
   626                           
   627                           
   628                           ;main.c: 61: {
   629                           ;main.c: 62: processDisplay();
   630  07D7  2774               	fcall	_processDisplay
   631  07D8  2FD7               	goto	l680
   632  07D9                     __end_of_main:	
   633                           ;main.c: 63: }
   634                           ;main.c: 64: return (0);
   635                           ;	Return value of _main is never used
   636                           
   637                           
   638                           	psect	text1
   639  0774                     __ptext1:	
   640 ;; *************** function _processDisplay *****************
   641 ;; Defined at:
   642 ;;		line 113 in file "displaydriver.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMMON   BANK0   BANK1
   656 ;;      Params:         0       0       0
   657 ;;      Locals:         0       0       0
   658 ;;      Temps:          1       0       0
   659 ;;      Totals:         1       0       0
   660 ;;Total ram usage:        1 bytes
   661 ;; Hardware stack levels used:    1
   662 ;; Hardware stack levels required when called:    1
   663 ;; This function calls:
   664 ;;		_enableDigit
   665 ;;		_muxDigit
   666 ;; This function is called by:
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           
   672                           ;psect for function _processDisplay
   673  0774                     _processDisplay:	
   674                           
   675                           ;displaydriver.c: 115: if(gD.muxFlag == 1)
   676                           
   677                           ;incstack = 0
   678                           ; Regs used in _processDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   679  0774  1283               	bcf	3,5	;RP0=0, select bank0
   680  0775  1303               	bcf	3,6	;RP1=0, select bank0
   681  0776  0335               	decf	_gD+21,w
   682  0777  1D03               	btfss	3,2
   683  0778  0008               	return
   684                           
   685                           ;displaydriver.c: 116: {
   686                           ;displaydriver.c: 117: gD.muxFlag = 0;
   687  0779  01B5               	clrf	_gD+21
   688                           
   689                           ;displaydriver.c: 118: if(gD.muxPos++ == 6)
   690  077A  3001               	movlw	1
   691  077B  00F2               	movwf	??_processDisplay
   692  077C  0872               	movf	??_processDisplay,w
   693  077D  07B4               	addwf	_gD+20,f
   694  077E  3007               	movlw	7
   695  077F  0634               	xorwf	_gD+20,w
   696  0780  1903               	btfsc	3,2
   697                           
   698                           ;displaydriver.c: 119: gD.muxPos = 0;
   699  0781  01B4               	clrf	_gD+20
   700                           
   701                           ;displaydriver.c: 120: enableDigit(gD.muxPos);
   702  0782  0834               	movf	_gD+20,w
   703  0783  2795               	fcall	_enableDigit
   704                           
   705                           ;displaydriver.c: 121: muxDigit(gD.out[gD.muxPos], gD.out[gD.muxPos+5]);
   706  0784  1283               	bcf	3,5	;RP0=0, select bank0
   707  0785  1303               	bcf	3,6	;RP1=0, select bank0
   708  0786  0834               	movf	_gD+20,w
   709  0787  3E05               	addlw	5
   710  0788  3E20               	addlw	(low (_gD| 0))& (0+255)
   711  0789  0084               	movwf	4
   712  078A  1383               	bcf	3,7	;select IRP bank0
   713  078B  0800               	movf	0,w
   714  078C  00F2               	movwf	??_processDisplay
   715  078D  0872               	movf	??_processDisplay,w
   716  078E  00F0               	movwf	muxDigit@d2
   717  078F  0834               	movf	_gD+20,w
   718  0790  3E20               	addlw	(low (_gD| 0))& (0+255)
   719  0791  0084               	movwf	4
   720  0792  0800               	movf	0,w
   721  0793  2712               	fcall	_muxDigit
   722  0794  0008               	return
   723  0795                     __end_of_processDisplay:	
   724                           
   725                           	psect	text2
   726  0712                     __ptext2:	
   727 ;; *************** function _muxDigit *****************
   728 ;; Defined at:
   729 ;;		line 76 in file "displaydriver.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;  d1              1    wreg     unsigned char 
   732 ;;  d2              1    0[COMMON] unsigned char 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  d1              1    1[COMMON] unsigned char 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1
   744 ;;      Params:         1       0       0
   745 ;;      Locals:         1       0       0
   746 ;;      Temps:          0       0       0
   747 ;;      Totals:         2       0       0
   748 ;;Total ram usage:        2 bytes
   749 ;; Hardware stack levels used:    1
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_processDisplay
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           
   758                           ;psect for function _muxDigit
   759  0712                     _muxDigit:	
   760                           
   761                           ;incstack = 0
   762                           ; Regs used in _muxDigit: [wreg+status,2+status,0]
   763                           ;muxDigit@d1 stored from wreg
   764  0712  00F1               	movwf	muxDigit@d1
   765                           
   766                           ;displaydriver.c: 78: if(d1 && 0x80 > 0)
   767  0713  0871               	movf	muxDigit@d1,w
   768  0714  1903               	btfsc	3,2
   769  0715  2F19               	goto	l604
   770                           
   771                           ;displaydriver.c: 79: PORTCbits.RC2 = 1;
   772  0716  1283               	bcf	3,5	;RP0=0, select bank0
   773  0717  1303               	bcf	3,6	;RP1=0, select bank0
   774  0718  1507               	bsf	7,2	;volatile
   775  0719                     l604:	
   776                           
   777                           ;displaydriver.c: 80: if(d1 && 0x40 > 0)
   778  0719  0871               	movf	muxDigit@d1,w
   779  071A  1903               	btfsc	3,2
   780  071B  2F1F               	goto	l608
   781                           
   782                           ;displaydriver.c: 81: PORTCbits.RC0 = 1;
   783  071C  1283               	bcf	3,5	;RP0=0, select bank0
   784  071D  1303               	bcf	3,6	;RP1=0, select bank0
   785  071E  1407               	bsf	7,0	;volatile
   786  071F                     l608:	
   787                           
   788                           ;displaydriver.c: 82: if(d1 && 0x20 > 0)
   789  071F  0871               	movf	muxDigit@d1,w
   790  0720  1903               	btfsc	3,2
   791  0721  2F25               	goto	l612
   792                           
   793                           ;displaydriver.c: 83: PORTAbits.RA4 = 1;
   794  0722  1283               	bcf	3,5	;RP0=0, select bank0
   795  0723  1303               	bcf	3,6	;RP1=0, select bank0
   796  0724  1605               	bsf	5,4	;volatile
   797  0725                     l612:	
   798                           
   799                           ;displaydriver.c: 84: if(d1 && 0x10 > 0)
   800  0725  0871               	movf	muxDigit@d1,w
   801  0726  1903               	btfsc	3,2
   802  0727  2F2B               	goto	l616
   803                           
   804                           ;displaydriver.c: 85: PORTAbits.RA3 = 1;
   805  0728  1283               	bcf	3,5	;RP0=0, select bank0
   806  0729  1303               	bcf	3,6	;RP1=0, select bank0
   807  072A  1585               	bsf	5,3	;volatile
   808  072B                     l616:	
   809                           
   810                           ;displaydriver.c: 86: if(d1 && 0x08 > 0)
   811  072B  0871               	movf	muxDigit@d1,w
   812  072C  1903               	btfsc	3,2
   813  072D  2F31               	goto	l620
   814                           
   815                           ;displaydriver.c: 87: PORTAbits.RA5 = 1;
   816  072E  1283               	bcf	3,5	;RP0=0, select bank0
   817  072F  1303               	bcf	3,6	;RP1=0, select bank0
   818  0730  1685               	bsf	5,5	;volatile
   819  0731                     l620:	
   820                           
   821                           ;displaydriver.c: 88: if(d1 && 0x04 > 0)
   822  0731  0871               	movf	muxDigit@d1,w
   823  0732  1903               	btfsc	3,2
   824  0733  2F37               	goto	l624
   825                           
   826                           ;displaydriver.c: 89: PORTAbits.RA6 = 1;
   827  0734  1283               	bcf	3,5	;RP0=0, select bank0
   828  0735  1303               	bcf	3,6	;RP1=0, select bank0
   829  0736  1705               	bsf	5,6	;volatile
   830  0737                     l624:	
   831                           
   832                           ;displaydriver.c: 90: if(d1 && 0x02 > 0)
   833  0737  0871               	movf	muxDigit@d1,w
   834  0738  1903               	btfsc	3,2
   835  0739  2F3D               	goto	l628
   836                           
   837                           ;displaydriver.c: 91: PORTCbits.RC1 = 1;
   838  073A  1283               	bcf	3,5	;RP0=0, select bank0
   839  073B  1303               	bcf	3,6	;RP1=0, select bank0
   840  073C  1487               	bsf	7,1	;volatile
   841  073D                     l628:	
   842                           
   843                           ;displaydriver.c: 92: if(d1 && 0x01 > 0)
   844  073D  0871               	movf	muxDigit@d1,w
   845  073E  1903               	btfsc	3,2
   846  073F  2F43               	goto	l632
   847                           
   848                           ;displaydriver.c: 93: PORTAbits.RA7 = 1;
   849  0740  1283               	bcf	3,5	;RP0=0, select bank0
   850  0741  1303               	bcf	3,6	;RP1=0, select bank0
   851  0742  1785               	bsf	5,7	;volatile
   852  0743                     l632:	
   853                           
   854                           ;displaydriver.c: 95: if(d2 && 0x80 > 0)
   855  0743  0870               	movf	muxDigit@d2,w
   856  0744  1903               	btfsc	3,2
   857  0745  2F49               	goto	l636
   858                           
   859                           ;displaydriver.c: 96: PORTCbits.RC5 = 1;
   860  0746  1283               	bcf	3,5	;RP0=0, select bank0
   861  0747  1303               	bcf	3,6	;RP1=0, select bank0
   862  0748  1687               	bsf	7,5	;volatile
   863  0749                     l636:	
   864                           
   865                           ;displaydriver.c: 97: if(d2 && 0x40 > 0)
   866  0749  0870               	movf	muxDigit@d2,w
   867  074A  1903               	btfsc	3,2
   868  074B  2F4F               	goto	l640
   869                           
   870                           ;displaydriver.c: 98: PORTCbits.RC4 = 1;
   871  074C  1283               	bcf	3,5	;RP0=0, select bank0
   872  074D  1303               	bcf	3,6	;RP1=0, select bank0
   873  074E  1607               	bsf	7,4	;volatile
   874  074F                     l640:	
   875                           
   876                           ;displaydriver.c: 99: if(d2 && 0x20 > 0)
   877  074F  0870               	movf	muxDigit@d2,w
   878  0750  1903               	btfsc	3,2
   879  0751  2F55               	goto	l644
   880                           
   881                           ;displaydriver.c: 100: PORTBbits.RB4 = 1;
   882  0752  1283               	bcf	3,5	;RP0=0, select bank0
   883  0753  1303               	bcf	3,6	;RP1=0, select bank0
   884  0754  1606               	bsf	6,4	;volatile
   885  0755                     l644:	
   886                           
   887                           ;displaydriver.c: 101: if(d2 && 0x10 > 0)
   888  0755  0870               	movf	muxDigit@d2,w
   889  0756  1903               	btfsc	3,2
   890  0757  2F5B               	goto	l648
   891                           
   892                           ;displaydriver.c: 102: PORTBbits.RB5 = 1;
   893  0758  1283               	bcf	3,5	;RP0=0, select bank0
   894  0759  1303               	bcf	3,6	;RP1=0, select bank0
   895  075A  1686               	bsf	6,5	;volatile
   896  075B                     l648:	
   897                           
   898                           ;displaydriver.c: 103: if(d2 && 0x08 > 0)
   899  075B  0870               	movf	muxDigit@d2,w
   900  075C  1903               	btfsc	3,2
   901  075D  2F61               	goto	l652
   902                           
   903                           ;displaydriver.c: 104: PORTBbits.RB3 = 1;
   904  075E  1283               	bcf	3,5	;RP0=0, select bank0
   905  075F  1303               	bcf	3,6	;RP1=0, select bank0
   906  0760  1586               	bsf	6,3	;volatile
   907  0761                     l652:	
   908                           
   909                           ;displaydriver.c: 105: if(d2 && 0x04 > 0)
   910  0761  0870               	movf	muxDigit@d2,w
   911  0762  1903               	btfsc	3,2
   912  0763  2F67               	goto	l656
   913                           
   914                           ;displaydriver.c: 106: PORTBbits.RB1 = 1;
   915  0764  1283               	bcf	3,5	;RP0=0, select bank0
   916  0765  1303               	bcf	3,6	;RP1=0, select bank0
   917  0766  1486               	bsf	6,1	;volatile
   918  0767                     l656:	
   919                           
   920                           ;displaydriver.c: 107: if(d2 && 0x02 > 0)
   921  0767  0870               	movf	muxDigit@d2,w
   922  0768  1903               	btfsc	3,2
   923  0769  2F6D               	goto	l660
   924                           
   925                           ;displaydriver.c: 108: PORTBbits.RB0 = 1;
   926  076A  1283               	bcf	3,5	;RP0=0, select bank0
   927  076B  1303               	bcf	3,6	;RP1=0, select bank0
   928  076C  1406               	bsf	6,0	;volatile
   929  076D                     l660:	
   930                           
   931                           ;displaydriver.c: 109: if(d2 && 0x01 > 0)
   932  076D  0870               	movf	muxDigit@d2,w
   933  076E  1903               	btfsc	3,2
   934  076F  0008               	return
   935                           
   936                           ;displaydriver.c: 110: PORTBbits.RB2 = 1;
   937  0770  1283               	bcf	3,5	;RP0=0, select bank0
   938  0771  1303               	bcf	3,6	;RP1=0, select bank0
   939  0772  1506               	bsf	6,2	;volatile
   940  0773  0008               	return
   941  0774                     __end_of_muxDigit:	
   942                           
   943                           	psect	text3
   944  0795                     __ptext3:	
   945 ;; *************** function _enableDigit *****************
   946 ;; Defined at:
   947 ;;		line 52 in file "displaydriver.c"
   948 ;; Parameters:    Size  Location     Type
   949 ;;  pos             1    wreg     unsigned char 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  pos             1    0[COMMON] unsigned char 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1
   961 ;;      Params:         0       0       0
   962 ;;      Locals:         1       0       0
   963 ;;      Temps:          0       0       0
   964 ;;      Totals:         1       0       0
   965 ;;Total ram usage:        1 bytes
   966 ;; Hardware stack levels used:    1
   967 ;; This function calls:
   968 ;;		Nothing
   969 ;; This function is called by:
   970 ;;		_processDisplay
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           
   975                           ;psect for function _enableDigit
   976  0795                     _enableDigit:	
   977                           
   978                           ;incstack = 0
   979                           ; Regs used in _enableDigit: [wreg-fsr0h+status,2+status,0]
   980                           ;enableDigit@pos stored from wreg
   981  0795  00F0               	movwf	enableDigit@pos
   982                           
   983                           ;displaydriver.c: 54: PORTAbits.RA0 = 0;
   984  0796  1283               	bcf	3,5	;RP0=0, select bank0
   985  0797  1303               	bcf	3,6	;RP1=0, select bank0
   986  0798  1005               	bcf	5,0	;volatile
   987                           
   988                           ;displaydriver.c: 55: PORTAbits.RA1 = 0;
   989  0799  1085               	bcf	5,1	;volatile
   990                           
   991                           ;displaydriver.c: 56: PORTAbits.RA2 = 0;
   992  079A  1105               	bcf	5,2	;volatile
   993                           
   994                           ;displaydriver.c: 57: PORTBbits.RB6 = 0;
   995  079B  1306               	bcf	6,6	;volatile
   996                           
   997                           ;displaydriver.c: 58: PORTBbits.RB7 = 0;
   998  079C  1386               	bcf	6,7	;volatile
   999                           
  1000                           ;displaydriver.c: 59: switch(pos)
  1001  079D  2FA4               	goto	l468
  1002  079E                     l50:	
  1003                           ;displaydriver.c: 62: case(0):
  1004                           
  1005                           ;displaydriver.c: 60: {
  1006                           ;displaydriver.c: 61: default:
  1007                           
  1008                           
  1009                           ;displaydriver.c: 63: PORTBbits.RB7 = 1;
  1010  079E  1786               	bsf	6,7	;volatile
  1011  079F                     l51:	
  1012                           ;displaydriver.c: 64: case(1):
  1013                           
  1014                           
  1015                           ;displaydriver.c: 65: PORTBbits.RB6 = 1;
  1016  079F  1706               	bsf	6,6	;volatile
  1017  07A0                     l52:	
  1018                           ;displaydriver.c: 66: case(2):
  1019                           
  1020                           
  1021                           ;displaydriver.c: 67: PORTAbits.RA0 = 1;
  1022  07A0  1405               	bsf	5,0	;volatile
  1023  07A1                     l53:	
  1024                           ;displaydriver.c: 68: case(3):
  1025                           
  1026                           
  1027                           ;displaydriver.c: 69: PORTAbits.RA1 = 1;
  1028  07A1  1485               	bsf	5,1	;volatile
  1029  07A2                     l54:	
  1030                           ;displaydriver.c: 70: case(4):
  1031                           
  1032                           
  1033                           ;displaydriver.c: 71: PORTAbits.RA2 = 1;
  1034  07A2  1505               	bsf	5,2	;volatile
  1035                           
  1036                           ;displaydriver.c: 72: }
  1037  07A3  0008               	return
  1038  07A4                     l468:	
  1039  07A4  0870               	movf	enableDigit@pos,w
  1040                           
  1041                           ; Switch size 1, requested type "space"
  1042                           ; Number of cases is 5, Range of values is 0 to 4
  1043                           ; switch strategies available:
  1044                           ; Name         Instructions Cycles
  1045                           ; direct_byte           11     6 (fixed)
  1046                           ; simple_byte           16     9 (average)
  1047                           ; jumptable            260     6 (fixed)
  1048                           ;	Chosen strategy is direct_byte
  1049  07A5  0084               	movwf	4
  1050  07A6  3005               	movlw	5
  1051  07A7  0204               	subwf	4,w
  1052  07A8  1803               	skipnc
  1053  07A9  2F9E               	goto	l50
  1054  07AA  3000               	movlw	high S702
  1055  07AB  008A               	movwf	10
  1056  07AC  3001               	movlw	low S702
  1057  07AD  0704               	addwf	4,w
  1058  07AE  0082               	movwf	2
  1059  07AF  0008               	return
  1060  07B0                     __end_of_enableDigit:	
  1061                           
  1062                           	psect	swtext1
  1063  0001                     __pswtext1:	
  1064  0001                     S702:	
  1065  0001  2F9E               	ljmp	l50
  1066  0002  2F9F               	ljmp	l51
  1067  0003  2FA0               	ljmp	l52
  1068  0004  2FA1               	ljmp	l53
  1069  0005  2FA2               	ljmp	l54
  1070                           
  1071                           	psect	text4
  1072  07B0                     __ptext4:	
  1073 ;; *************** function _gpio_init *****************
  1074 ;; Defined at:
  1075 ;;		line 22 in file "main.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;		None
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		None
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1
  1089 ;;      Params:         0       0       0
  1090 ;;      Locals:         0       0       0
  1091 ;;      Temps:          0       0       0
  1092 ;;      Totals:         0       0       0
  1093 ;;Total ram usage:        0 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; This function calls:
  1096 ;;		Nothing
  1097 ;; This function is called by:
  1098 ;;		_main
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           
  1103                           ;psect for function _gpio_init
  1104  07B0                     _gpio_init:	
  1105                           
  1106                           ;main.c: 24: TRISAbits.TRISA0 = 0;
  1107                           
  1108                           ;incstack = 0
  1109                           ; Regs used in _gpio_init: []
  1110  07B0  1683               	bsf	3,5	;RP0=1, select bank1
  1111  07B1  1303               	bcf	3,6	;RP1=0, select bank1
  1112  07B2  1005               	bcf	5,0	;volatile
  1113                           
  1114                           ;main.c: 25: TRISAbits.TRISA1 = 0;
  1115  07B3  1085               	bcf	5,1	;volatile
  1116                           
  1117                           ;main.c: 26: TRISAbits.TRISA2 = 0;
  1118  07B4  1105               	bcf	5,2	;volatile
  1119                           
  1120                           ;main.c: 27: TRISAbits.TRISA3 = 0;
  1121  07B5  1185               	bcf	5,3	;volatile
  1122                           
  1123                           ;main.c: 28: TRISAbits.TRISA4 = 0;
  1124  07B6  1205               	bcf	5,4	;volatile
  1125                           
  1126                           ;main.c: 29: TRISAbits.TRISA5 = 0;
  1127  07B7  1285               	bcf	5,5	;volatile
  1128                           
  1129                           ;main.c: 30: TRISAbits.TRISA6 = 0;
  1130  07B8  1305               	bcf	5,6	;volatile
  1131                           
  1132                           ;main.c: 31: TRISAbits.TRISA7 = 0;
  1133  07B9  1385               	bcf	5,7	;volatile
  1134                           
  1135                           ;main.c: 33: TRISBbits.TRISB0 = 0;
  1136  07BA  1006               	bcf	6,0	;volatile
  1137                           
  1138                           ;main.c: 34: TRISBbits.TRISB1 = 0;
  1139  07BB  1086               	bcf	6,1	;volatile
  1140                           
  1141                           ;main.c: 35: TRISBbits.TRISB2 = 0;
  1142  07BC  1106               	bcf	6,2	;volatile
  1143                           
  1144                           ;main.c: 36: TRISBbits.TRISB3 = 0;
  1145  07BD  1186               	bcf	6,3	;volatile
  1146                           
  1147                           ;main.c: 37: TRISBbits.TRISB4 = 0;
  1148  07BE  1206               	bcf	6,4	;volatile
  1149                           
  1150                           ;main.c: 38: TRISBbits.TRISB5 = 0;
  1151  07BF  1286               	bcf	6,5	;volatile
  1152                           
  1153                           ;main.c: 39: TRISBbits.TRISB6 = 0;
  1154  07C0  1306               	bcf	6,6	;volatile
  1155                           
  1156                           ;main.c: 40: TRISBbits.TRISB7 = 0;
  1157  07C1  1386               	bcf	6,7	;volatile
  1158                           
  1159                           ;main.c: 42: TRISCbits.TRISC0 = 0;
  1160  07C2  1007               	bcf	7,0	;volatile
  1161                           
  1162                           ;main.c: 43: TRISCbits.TRISC1 = 0;
  1163  07C3  1087               	bcf	7,1	;volatile
  1164                           
  1165                           ;main.c: 44: TRISCbits.TRISC2 = 0;
  1166  07C4  1107               	bcf	7,2	;volatile
  1167                           
  1168                           ;main.c: 45: TRISCbits.TRISC3 = 1;
  1169  07C5  1587               	bsf	7,3	;volatile
  1170                           
  1171                           ;main.c: 46: TRISCbits.TRISC4 = 0;
  1172  07C6  1207               	bcf	7,4	;volatile
  1173                           
  1174                           ;main.c: 47: TRISCbits.TRISC5 = 0;
  1175  07C7  1287               	bcf	7,5	;volatile
  1176                           
  1177                           ;main.c: 48: TRISCbits.TRISC6 = 1;
  1178  07C8  1707               	bsf	7,6	;volatile
  1179                           
  1180                           ;main.c: 49: TRISCbits.TRISC7 = 1;
  1181  07C9  1787               	bsf	7,7	;volatile
  1182  07CA  0008               	return
  1183  07CB                     __end_of_gpio_init:	
  1184  007E                     btemp	set	126	;btemp
  1185  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    256
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0      22
    BANK1            32      0       0

Pointer List with Targets:

    sp__memcpy	PTR void  size(1) Largest target is 22
		 -> gD(BANK0[22]), 


Critical Paths under _main in COMMON

    _main->_processDisplay
    _processDisplay->_muxDigit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4     420
                                              3 COMMON     4     0      4
                          _gpio_init
                     _processDisplay
 ---------------------------------------------------------------------------------
 (1) _processDisplay                                       1     1      0     420
                                              2 COMMON     1     1      0
                        _enableDigit
                           _muxDigit
 ---------------------------------------------------------------------------------
 (2) _muxDigit                                             2     1      1     405
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (2) _enableDigit                                          1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gpio_init
   _processDisplay
     _enableDigit
     _muxDigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            20      0       0       6        0.0%
BANK1               20      0       0       7        0.0%
DATA                 0      0      1D       8        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jul 10 21:43:15 2018

                      pc 0002                       l50 079E                       l51 079F  
                     l52 07A0                       l53 07A1                       l54 07A2  
                     _gD 0020                       fsr 0004                      S702 0001  
                    l620 0731                      l612 0725                      l604 0719  
                    l640 074F                      l632 0743                      l624 0737  
                    l616 072B                      l608 071F                      l468 07A4  
                    l660 076D                      l652 0761                      l644 0755  
                    l636 0749                      l628 073D                      l656 0767  
                    l648 075B                      l680 07D7                      fsr0 0004  
                    indf 0000                     _main 07D3                     btemp 007E  
                   start 0000                    ?_main 0073                    pclath 000A  
                  status 0003                    wtemp0 007E        __end_of_ASCII7SEG 0712  
        __initialization 07F9             __end_of_main 07D9                   ??_main 0077  
   __size_of_enableDigit 001B         ??_processDisplay 0072         __end_of_muxDigit 0774  
__end_of__initialization 07FE           __pcstackCOMMON 0070               __pbssBANK0 0020  
     __size_of_gpio_init 001B               __pmaintext 07D3               __stringtab 0600  
              ?_muxDigit 0070                _ASCII7SEG 0612                  __ptext1 0774  
                __ptext2 0712                  __ptext3 0795                  __ptext4 07B0  
      __end_of_gpio_init 07CB                  clrloop0 07CC     end_of_initialization 07FE  
             ??_muxDigit 0071             __pstringtext 0600                _PORTAbits 0005  
          ??_enableDigit 0070                _PORTBbits 0006                _PORTCbits 0007  
              _TRISAbits 0085                _TRISBbits 0086                _TRISCbits 0087  
              _TXSTAbits 0098           enableDigit@pos 0070      start_initialization 07F9  
    __end_of_enableDigit 07B0  __size_of_processDisplay 0021                ___latbits 0000  
      __size_of_muxDigit 0062                __pswtext1 0001              _enableDigit 0795  
              _gpio_init 07B0               muxDigit@d1 0071               muxDigit@d2 0070  
              clear_ram0 07CB              __stringbase 0612               ?_gpio_init 0070  
     __end_of__stringtab 0612           _processDisplay 0774            __size_of_main 0006  
               _muxDigit 0712                 main@argc 0073   __end_of_processDisplay 0795  
               main@argv 0075              ??_gpio_init 0070                stringcode 060A  
        ?_processDisplay 0070             ?_enableDigit 0070                 stringtab 0600  
